/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.7.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package is.ccp.tech.esi;

import is.ccp.tech.ApiException;
import is.ccp.tech.esi.models.Forbidden;
import is.ccp.tech.esi.models.GetCharactersCharacterIdAgentsResearch200Ok;
import is.ccp.tech.esi.models.GetCharactersCharacterIdBlueprints200Ok;
import is.ccp.tech.esi.models.GetCharactersCharacterIdChatChannels200Ok;
import is.ccp.tech.esi.models.GetCharactersCharacterIdCorporationhistory200Ok;
import is.ccp.tech.esi.models.GetCharactersCharacterIdFatigueOk;
import is.ccp.tech.esi.models.GetCharactersCharacterIdMedals200Ok;
import is.ccp.tech.esi.models.GetCharactersCharacterIdNotFound;
import is.ccp.tech.esi.models.GetCharactersCharacterIdNotifications200Ok;
import is.ccp.tech.esi.models.GetCharactersCharacterIdNotificationsContacts200Ok;
import is.ccp.tech.esi.models.GetCharactersCharacterIdOk;
import is.ccp.tech.esi.models.GetCharactersCharacterIdPortraitNotFound;
import is.ccp.tech.esi.models.GetCharactersCharacterIdPortraitOk;
import is.ccp.tech.esi.models.GetCharactersCharacterIdStandings200Ok;
import is.ccp.tech.esi.models.GetCharactersCharacterIdTitles200Ok;
import is.ccp.tech.esi.models.GetCharactersNames200Ok;
import is.ccp.tech.esi.models.InternalServerError;
import is.ccp.tech.esi.models.PostCharactersAffiliation200Ok;
import is.ccp.tech.esi.models.PostCharactersAffiliationNotFound;
import is.ccp.tech.esi.models.PostCharactersCharacterIdCspaCharacters;
import is.ccp.tech.esi.models.PostCharactersCharacterIdCspaCreated;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CharacterApi
 */
@Ignore
public class CharacterApiTest {

    private final CharacterApi api = new CharacterApi();

    
    /**
     * Get character&#39;s public information
     *
     * Public information about a character  --- Alternate route: &#x60;/v4/characters/{character_id}/&#x60;  Alternate route: &#x60;/dev/characters/{character_id}/&#x60;  --- This route is cached for up to 3600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdTest() throws ApiException {
        Integer characterId = null;
        String datasource = null;
        String userAgent = null;
        String xUserAgent = null;
        GetCharactersCharacterIdOk response = api.getCharactersCharacterId(characterId, datasource, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Get agents research
     *
     * Return a list of agents research information for a character. The formula for finding the current research points with an agent is: currentPoints &#x3D; remainderPoints + pointsPerDay * days(currentTime - researchStartDate)  --- Alternate route: &#x60;/v1/characters/{character_id}/agents_research/&#x60;  Alternate route: &#x60;/legacy/characters/{character_id}/agents_research/&#x60;  Alternate route: &#x60;/dev/characters/{character_id}/agents_research/&#x60;  --- This route is cached for up to 3600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdAgentsResearchTest() throws ApiException {
        Integer characterId = null;
        String datasource = null;
        String token = null;
        String userAgent = null;
        String xUserAgent = null;
        List<GetCharactersCharacterIdAgentsResearch200Ok> response = api.getCharactersCharacterIdAgentsResearch(characterId, datasource, token, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Get blueprints
     *
     * Return a list of blueprints the character owns  --- Alternate route: &#x60;/v2/characters/{character_id}/blueprints/&#x60;  Alternate route: &#x60;/dev/characters/{character_id}/blueprints/&#x60;  --- This route is cached for up to 3600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdBlueprintsTest() throws ApiException {
        Integer characterId = null;
        String datasource = null;
        Integer page = null;
        String token = null;
        String userAgent = null;
        String xUserAgent = null;
        List<GetCharactersCharacterIdBlueprints200Ok> response = api.getCharactersCharacterIdBlueprints(characterId, datasource, page, token, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Get chat channels
     *
     * Return chat channels that a character is the owner or operator of  --- Alternate route: &#x60;/v1/characters/{character_id}/chat_channels/&#x60;  Alternate route: &#x60;/legacy/characters/{character_id}/chat_channels/&#x60;  Alternate route: &#x60;/dev/characters/{character_id}/chat_channels/&#x60;  --- This route is cached for up to 300 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdChatChannelsTest() throws ApiException {
        Integer characterId = null;
        String datasource = null;
        String token = null;
        String userAgent = null;
        String xUserAgent = null;
        List<GetCharactersCharacterIdChatChannels200Ok> response = api.getCharactersCharacterIdChatChannels(characterId, datasource, token, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Get corporation history
     *
     * Get a list of all the corporations a character has been a member of  --- Alternate route: &#x60;/v1/characters/{character_id}/corporationhistory/&#x60;  Alternate route: &#x60;/legacy/characters/{character_id}/corporationhistory/&#x60;  Alternate route: &#x60;/dev/characters/{character_id}/corporationhistory/&#x60;  --- This route is cached for up to 3600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdCorporationhistoryTest() throws ApiException {
        Integer characterId = null;
        String datasource = null;
        String userAgent = null;
        String xUserAgent = null;
        List<GetCharactersCharacterIdCorporationhistory200Ok> response = api.getCharactersCharacterIdCorporationhistory(characterId, datasource, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Get jump fatigue
     *
     * Return a character&#39;s jump activation and fatigue information  --- Alternate route: &#x60;/v1/characters/{character_id}/fatigue/&#x60;  Alternate route: &#x60;/legacy/characters/{character_id}/fatigue/&#x60;  Alternate route: &#x60;/dev/characters/{character_id}/fatigue/&#x60;  --- This route is cached for up to 300 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdFatigueTest() throws ApiException {
        Integer characterId = null;
        String datasource = null;
        String token = null;
        String userAgent = null;
        String xUserAgent = null;
        GetCharactersCharacterIdFatigueOk response = api.getCharactersCharacterIdFatigue(characterId, datasource, token, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Get medals
     *
     * Return a list of medals the character has  --- Alternate route: &#x60;/v1/characters/{character_id}/medals/&#x60;  Alternate route: &#x60;/legacy/characters/{character_id}/medals/&#x60;  Alternate route: &#x60;/dev/characters/{character_id}/medals/&#x60;  --- This route is cached for up to 3600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdMedalsTest() throws ApiException {
        Integer characterId = null;
        String datasource = null;
        String token = null;
        String userAgent = null;
        String xUserAgent = null;
        List<GetCharactersCharacterIdMedals200Ok> response = api.getCharactersCharacterIdMedals(characterId, datasource, token, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Get character notifications
     *
     * Return character notifications  --- Alternate route: &#x60;/v1/characters/{character_id}/notifications/&#x60;  Alternate route: &#x60;/legacy/characters/{character_id}/notifications/&#x60;  Alternate route: &#x60;/dev/characters/{character_id}/notifications/&#x60;  --- This route is cached for up to 600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdNotificationsTest() throws ApiException {
        Integer characterId = null;
        String datasource = null;
        String token = null;
        String userAgent = null;
        String xUserAgent = null;
        List<GetCharactersCharacterIdNotifications200Ok> response = api.getCharactersCharacterIdNotifications(characterId, datasource, token, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Get new contact notifications
     *
     * Return notifications about having been added to someone&#39;s contact list  --- Alternate route: &#x60;/v1/characters/{character_id}/notifications/contacts/&#x60;  Alternate route: &#x60;/legacy/characters/{character_id}/notifications/contacts/&#x60;  Alternate route: &#x60;/dev/characters/{character_id}/notifications/contacts/&#x60;  --- This route is cached for up to 600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdNotificationsContactsTest() throws ApiException {
        Integer characterId = null;
        String datasource = null;
        String token = null;
        String userAgent = null;
        String xUserAgent = null;
        List<GetCharactersCharacterIdNotificationsContacts200Ok> response = api.getCharactersCharacterIdNotificationsContacts(characterId, datasource, token, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Get character portraits
     *
     * Get portrait urls for a character  --- Alternate route: &#x60;/v2/characters/{character_id}/portrait/&#x60;  Alternate route: &#x60;/dev/characters/{character_id}/portrait/&#x60;  --- This route is cached for up to 3600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdPortraitTest() throws ApiException {
        Integer characterId = null;
        String datasource = null;
        String userAgent = null;
        String xUserAgent = null;
        GetCharactersCharacterIdPortraitOk response = api.getCharactersCharacterIdPortrait(characterId, datasource, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Get character corporation roles
     *
     * Returns a character&#39;s corporation roles  --- Alternate route: &#x60;/v1/characters/{character_id}/roles/&#x60;  Alternate route: &#x60;/legacy/characters/{character_id}/roles/&#x60;  --- This route is cached for up to 3600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdRolesTest() throws ApiException {
        Integer characterId = null;
        String datasource = null;
        String token = null;
        String userAgent = null;
        String xUserAgent = null;
        List<String> response = api.getCharactersCharacterIdRoles(characterId, datasource, token, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Get standings
     *
     * Return character standings from agents, NPC corporations, and factions  --- Alternate route: &#x60;/v1/characters/{character_id}/standings/&#x60;  Alternate route: &#x60;/legacy/characters/{character_id}/standings/&#x60;  Alternate route: &#x60;/dev/characters/{character_id}/standings/&#x60;  --- This route is cached for up to 3600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdStandingsTest() throws ApiException {
        Integer characterId = null;
        String datasource = null;
        String token = null;
        String userAgent = null;
        String xUserAgent = null;
        List<GetCharactersCharacterIdStandings200Ok> response = api.getCharactersCharacterIdStandings(characterId, datasource, token, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Get character corporation titles
     *
     * Returns a character&#39;s titles  --- Alternate route: &#x60;/v1/characters/{character_id}/titles/&#x60;  Alternate route: &#x60;/legacy/characters/{character_id}/titles/&#x60;  Alternate route: &#x60;/dev/characters/{character_id}/titles/&#x60;  --- This route is cached for up to 3600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdTitlesTest() throws ApiException {
        Integer characterId = null;
        String datasource = null;
        String token = null;
        String userAgent = null;
        String xUserAgent = null;
        List<GetCharactersCharacterIdTitles200Ok> response = api.getCharactersCharacterIdTitles(characterId, datasource, token, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Get character names
     *
     * Resolve a set of character IDs to character names  --- Alternate route: &#x60;/v1/characters/names/&#x60;  Alternate route: &#x60;/legacy/characters/names/&#x60;  Alternate route: &#x60;/dev/characters/names/&#x60;  --- This route is cached for up to 3600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCharactersNamesTest() throws ApiException {
        List<Long> characterIds = null;
        String datasource = null;
        String userAgent = null;
        String xUserAgent = null;
        List<GetCharactersNames200Ok> response = api.getCharactersNames(characterIds, datasource, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Character affiliation
     *
     * Bulk lookup of character IDs to corporation, alliance and faction  --- Alternate route: &#x60;/v1/characters/affiliation/&#x60;  Alternate route: &#x60;/legacy/characters/affiliation/&#x60;  Alternate route: &#x60;/dev/characters/affiliation/&#x60;  --- This route is cached for up to 3600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postCharactersAffiliationTest() throws ApiException {
        List<Integer> characters = null;
        String datasource = null;
        String userAgent = null;
        String xUserAgent = null;
        List<PostCharactersAffiliation200Ok> response = api.postCharactersAffiliation(characters, datasource, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Calculate a CSPA charge cost
     *
     * Takes a source character ID in the url and a set of target character ID&#39;s in the body, returns a CSPA charge cost  --- Alternate route: &#x60;/v3/characters/{character_id}/cspa/&#x60;  Alternate route: &#x60;/legacy/characters/{character_id}/cspa/&#x60; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postCharactersCharacterIdCspaTest() throws ApiException {
        Integer characterId = null;
        PostCharactersCharacterIdCspaCharacters characters = null;
        String datasource = null;
        String token = null;
        String userAgent = null;
        String xUserAgent = null;
        PostCharactersCharacterIdCspaCreated response = api.postCharactersCharacterIdCspa(characterId, characters, datasource, token, userAgent, xUserAgent);

        // TODO: test validations
    }
    
}
